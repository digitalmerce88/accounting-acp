name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ROOT_PASSWORD: root
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo, pdo_mysql
          coverage: none

      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Install composer deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Copy .env
        run: cp .env.example .env

      - name: App key
        run: php artisan key:generate

      - name: Configure DB
        run: |
          php -r "file_put_contents('.env', str_replace('DB_CONNECTION=mysql', 'DB_CONNECTION=mysql', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/DB_HOST=.*/','DB_HOST=127.0.0.1', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/DB_PORT=.*/','DB_PORT=3306', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/DB_DATABASE=.*/','DB_DATABASE=laravel', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/DB_USERNAME=.*/','DB_USERNAME=root', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/DB_PASSWORD=.*/','DB_PASSWORD=root', file_get_contents('.env')));"

      - name: Migrate
        run: php artisan migrate --force

      - name: Validate composer
        run: composer validate --strict

      - name: Run tests
        run: php artisan test --without-tty

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install node deps
        run: npm ci

      - name: Build frontend
        run: npm run build
